1. Difference between throw and throws.
    Throw is a keyword which is used to throw an exception explicitly in the program inside a function or inside a block of code. 
    Throws is a keyword used in the method signature used to declare an exception which might get thrown by the function while executing the code.
    Only single exception is thrown by using throw.
    Multiple exceptions can be thrown by using throws.

2. What are the exceptions you have faced
   (how can you resolve no such element exception)
        (1) WebDriverException
        (2) NoSuchElementException
        (3) NoSuchFrameException
        (4) NoAlertPresentException
        (5) NoSuchWindowException
        (6) ElementNotVisibleException
        (7) ElementNotInterceptableException
        (8) SessionNotCreatedException
        (9) TimeOutException
        (10) InvalidSelectorException
        (11) IllegalStateException
        (12) StaleElementReferenceException

        1. NoSuchElementException occurs, when the locators (i.e. id / xpath/ css selectors etc) we mentioned in the code is unable to find the web element
        on the web page.
        2. There are two possibilities for getting this Exception, i.e. either we have provided a incorrect locator and trying to find the web element or we
        have provided correct locator, but the web element related to the locator is not available on the web page.
        3. We can handle this exception by wrapping fluent wait with  try-catch block

3. Explain about Page object model and advantages
        Page object model:
        Page Object Model in Selenium is a design pattern that is extensively used by the Selenium community for automation tests.
        The basic design principle that the Page Object Model in Selenium follows is that a central object repository should be created for controls on a web page. Hence, each web page will be represented by a separate class.
        Advantages:
        • Better Maintenance – With separate page objects (or page classes) for different web pages,
        functionality or web locator changes will have a less impact on the change in test scripts.
        This makes the code cleaner and more maintainable as Selenium test automation implementation is spread across separate page classes.
        • Minimal Changes Due to UI Updates – The effect of changes in the web locators will only be limited to the page classes,
        created for automated browser testing of those web pages. This reduces the overall effort spent in changing test scripts due to frequent UI updates.
        • Reusability – The page object methods defined in different page classes can be reused across Selenium test automation scripts.
        This, in turn, results in a reduction of code size as there is the increased usage of reusability.

4. Explain your framework
        1. Language used: Java
        2. Type of Framework: Behavioral-driven Framework by using Page Object Model design pattern with page factory
        3. POM: As per pom, we have maintained a class for every web page. Each webpage has a seperate class for functionality and members of that webpage. Seperate classes for every individual test.
        4. Packages: We have separate packages for test case, test data, utilities
        5. Test Base class: It will deal with all the common functions used by all the pages. This class is responsible for loading the configurations from properties file,
        initializing the Webdriver, Implicit waits, Extent Reports and also to create the object of FileInputStream which is responsible for pointing towards the file from which the data should be read.
        6. Utility class: It stores and handles the the functions which are repetitive (Waits, actions, capturing screenshots,accessing excels, Sending mails etc).This class extends the Test Base class to inherit the properties.
        7. Properties file: The file (config.properties) stores the info that remains static throughout the framework such as browser specific info, application URL, screenshots path etc.
        8. Screenshots: Screenshots will be captured and stored in a seperate folder and the screenshots of a failed test cases will be added in the extent reports
        9. Test-Data: All the historical test data will be kept in excel sheet. by using excel, we pass test data and handle data driven testing. we use Apache POI to handle excel sheets
        10. TestNG: Using TestNG for Assertions, Grouping and parallel execution
        11. BDD framework: we used BDD approach which is in simple text language such that everyone can able to understand what is going on in the project.
        12. Maven: Using Maven for build, execution, and dependancy purpose. Integrating the TestNG dependency in POM.xml file and running this POM.xml file using jenkins
        13. Version Control Tool: We use git and github as a repository to store and maintain our test scripts
        14. Jenkins: By using Jenkins CI (Continuous integration) Tool, we execute test cases on daily basis and for nightly execution based on the schedule. Test Results will be sent to the peers using Jenkins.
        15. Extent Reports: For the reporting purpose, We are using Extent Reports. It generates beautiful HTML reports. We use extent Reports for maintaining logs and to include the screenshots of failed test cases in the Extent Report.

5. Have you used POM in your framework?
       yes -As per the Page Object Model, we have maintained a class for every web page.
       Each web page has a separate class and that class holds the functionality and members of that web page.
       Separate classes for every individual test.

6. Have you used interface in your framework other then selenium interfaces?
        We have used TestNG listeners in selenium to generate logs or customize the testng reports.
        We have implemented ITestListener interface which have below methods
        OnStart
        onTestSuccess
        onTestFailure
        onTestSkipped
        onTestFailedButWithinSuccessPercentage
        onFinish

7.  What are the selenium interfaces
        Webdriver itself is an interface.
        Alert.
        Capabilities.
        ContextAware.
        HasCapabilities.
        JavascriptExecutor.
        OutputType.
        Rotatable.
        SearchContext.

8. How u will handle popup window ?other then get window handle
        Pop-up window can be handled using the java based utility Robot which is used to control keyboard and mouse actions.

        Common use-cases using Robot class:
        Create object for robot class
        Robot robot = new Robot();

        1) To press down arrow of keyboard we use
           robot.KeyPress(KeyEvent.VK_DOWN)
        2) To press TAB key of Keyboard we use
           robot.KeyPress(KeyEvent.VK_TAB)
        3) To press ENTER key of keyboard we use
           robot.KeyPress(KeyEvent.VK_ENTER)

9. Exceptions in Selenium?
        (1) WebDriverException
        (2) NoSuchElementException
        (3) NoSuchFrameException
        (4) NoAlertPresentException
        (5) NoSuchWindowException
        (6) ElementNotVisibleException
        (7) ElementNotInterceptableException
        (8) SessionNotCreatedException
        (9) TimeOutException
        (10) InvalidSelectorException
        (11) IllegalStateException
        (12) StaleElementReferenceException etc...

10. Suppose u have class and abstract class, in class there is a user defined constructor and main method which one will get execute first?
       The main method will always be executed first, because it is a special static method that will be called from Java itself to start an application

11.  Primitives and Non Primitives data types in java? String is primitive or non primitive
        1. Primitive data types: byte, short, int, long, float, double, boolean, char ;
        Non-primitive data types: String, Array, Interface, Class
        2. Primitive data types: Java predefined
        Non-primitive data types: Declared by the user

        String is non primitive as it is a class. Class comes under non primitive category.

12. What is the use of testNG file?
        TestNG. xml file is a configuration file that helps in organizing our tests. It allows testers to create and handle multiple test classes,
        define test suites and tests.
        It makes a tester's job easier by controlling the execution of tests by putting all the test cases together and run it under one XML file.

13. Ways to find broken links in selenium (except using HTTPURL Connection)
        1. Collect all the links using list in the web page based on <a> tag.
        2. Iterate through the list and click on each link
        3. Find out whether the link is valid or broken based 404 error displayed on the screen ""

14. Why did you choose selenium?
        I chose selenium because its not browser dependent.
        Supports many different languages and we can easily automate any web application using it.

15. How can we scroll to end of an page in dynamically loading page? [Answer is present in class_1.java]

16. What is xpath?Type of X path.Explain each type
        Xpath stands for XML path which consists of expression for a path along with certain conditions to locate a particular element.
        There are two types of XPath
        1. Absolute Xpath - XPath expression is created using the selection from the root node.
        It starts with a single slash ‘/’ and traverses from the root to the whole DOM to reach to the desired element.
        2. Relative XPath - XPath expression is created from the middle of the DOM structure.
        It is represented by a double slash ‘//’ denoting the current node.""

17. How do you perform parallel testing in Selenium?
        We use parallel attribute in testng.xml to acheive parallel testing in TestNG.
        It also has a parameter called as thread-count. The parallel can have the following values.
        (1) Tests
        (2) Classes
        (3) Methods
        (4) Instances

        Ex:
        <suite name = ""Deepthi"" parallel=""tests"" thread-count=""5"">
        <test name=""Banking"">
        <classes>
         <class name =""test.day1""/>
        </classes>
        </test>
        </suite>

        In above example, execution will happen in parallel mode for tests having thread-count of 5

18. Can you describe scrum ceremony?
        "Scrum ceremonies are meetings that are unique to scrum teams.
        Scrum ceremonies ensure that everyone (the scrum master, product owner and development team, testing team ) is in-sync.
        These ceremonies are held at key instances in a sprint.

        1. Sprint backlog refinement
        2. Sprint planning meeting
        3. Daily standup meeting
        4. Sprint review meeting
        5. Sprint retrospective meeting at end of sprint"

19. OOPS concepts

20. Method overloading and overriding.

21. Difference between constructor and interface.

22. In a web page there are several Pop-up, but we don't when the pop-up will appear,
    in this case how we will handle the Pop-up using Selenium WebDriver (Java)
          S1 - If in case suppose the pop up appears before the start of the test or end of the test we can use Test Listeners.
          S2 - But in case if it can appear anytime during execution,
          after each step there should be a validation to check for multiple handles and handle them accordingly (Not a ideal solution)

23. Explain Set and Map in Java
        Set:
        1. Set is an interface.Cannot be instantiated to a concrete implementation in order to use it.
        You can choose between the following Set implementations in the Java Collections API:
        java.util.EnumSet
        java.util.HashSet
        java.util.LinkedHashSet
        java.util.TreeSet
        2. Cannot contain duplicate elements.
        3. Accessing and adding order of each type of Set type is different

        Map:
        1. Map is a collection of key = value pair.
        2. A map does not contain duplicate keys.
        Below are the main implementations of Map interfaces
        1. HashMap
        2. LinkedHashedMap
        3. TreeMap""

24. Explain how BDD works with  Cucumber.
        BDD is Behavior Driven Development, which is derived from TDD (Test Driven Development).
        Here the tests are written first and then the application code is written later.
        As the application code adds on the tests pass and thus the motive is achieved.
        Cucumber is a testing framework which supports Behavior Driven Development

25. How will you handle dependencies in Maven at run time.
        Runtime
        This scope indicates that the dependency is not required for compilation, but is for execution.
        Maven includes a dependency with this scope in the runtime and test classpaths, but not the compile classpath.

26. What is hooks and explain hooks.
        Hooks are like annotations. @Before, @After, @BeforeStep , @AfterStep

27. How will u run the method again and again in testng?
        we can use invocationCount helper attribute.
        This is a TestNG attribute that defines number of times a test method should be invoked or executed before executing any other test method.
        If invocationCount = 5, then the test method will be executed 5 times before executing next test method.
        or we can use data provider.

28. How to run the test method in order
        Using priority near ever @Test method starting from 0 to later. 0 being highest.
        and in xml tag we use <suite name=""suite1"">
            <test name=""test"" preserve-order=""true"">

29. What is the difference between build and perform?
        build() method is used to create chain of action or operation you want to perform.
        perform() this method is used to execute chain of action which are build using Action build method.
        build().perform() = create chain of actions + execute

30. Selenium Webdriver architecture
        Since selenium supports multiple languages such as Java, Python, C# etc, we can develop automation
        scripts in all the supported languages. This is know as language binding or Client binding.
        2. When we execute the selenium code, request goes to the Selenium Standalone Server (also known as
        Selenium WebDriver Server), which further process the request based on the input received from the
        client binding and perform specific actions on the respective browsers using the browser specific driver
        executables,
        Eg : geckodriver.exe for firefox browser and
        chromedriver.exe for chrome browser and so on…
        3. Driver executables uses a protocol called JSON Wire protocol to communicate with related
        browsers. (JSON stands for Java Script Object Notation)

31. Selenium framework.
        I have used page object model design pattern by using java, selenium, testing , maven, git, Jenkins and I have followed data driven approach.
        1.Language- In our project we are using java language.
        2. Type of framework- we are using behavioural-driven framework by using page object model design pattern with page factory.
        3. POM- As per page object model, we have maintained a class for every web page.
            Each web page has a separate class and that class holds the functionality and members of that web page. Separate classes for every individual test.
        4.Packages- We have separate packages for Pages and Tests. All the web page related classes come under Pages package and all the test related classes come under Test package.
        5. Test Base Class-Test Base class (TestBase.java) deals with all the common functions used by all the pages.
            This class is responsible for loading the configurations from the properties files. Initializing the WebDriver,
            Implicit Waits, Extent reports and also to create the object of FileInputStream hich is responsible for pointing towards thr file from which the data should be read.
        6.Utility class- Utility class(TestUtil.java) stores and handles the functions(the code which is repeatative in nature
            such as waits, actions, capturing screenshots, accessing excels, sending mails etc) which can be commonly used across the entire framework.
            The reason behind creating utility class is to achieve reusability. This class extends the TestBase class to inherit the properties of TestBase in TestUtil.
        7.properties file- This file (config.properties) stores the information that remains static throughout the framework such as browser specific information, application url, screenshots path etc.
            All the details which change as per the environment and authorization such as url, Login credentials are kept in config.properties file. Keeping these details in a separate file makes easy to maintain.
        8. Screenshots- Screenshots will be captured and stored in a separate folder and the screenshots of a failed test cases will be added in the extent reports.
        9. Test Data- All the historical test data will be kept in excel sheet. By using excel file, we pass test data and handle data driven testing. We use Apache POI to handle excel sheets.
        10. TestNG- Using TestNG for Asseertions, Grouping and Parallel execution.
        11. BDD Framework- this allows tester to create test cases in simple text language(english). Simple language used in scenarios helps even non-technical team members to understand what is going on in the software project.
        12.Maven- Using maven for build, execution and dependency purpose. Integrating the TestNG dependency in POM.xml file and running this POM. Xml file using Jenkins.
        13.Version control tool- we use git and github as repository to store our test scripts.
        14. Jenkins- By using jenkins Ci (continuous integration ) tool , we executetest cases on daily basis and for nightly execution based on the schedule. Test Result will be sent to the peers using Jenkins.
        15. Extent reports- For the reporting purpose, we are using extent reports. It generates beautiful HTML reports.

32. What is compatibility testing.
        Compatibility Testing is a type of Software testing to check whether your software is capable of running on different hardware,
            operating systems, applications, network environments or mobile devices.Compatibility Testing is a type of Non-functional testing
            Types of Compatibility Tests
        • Hardware: It checks software to be compatible with different hardware configurations.
        • Operating Systems: It checks your software to be compatible with different Operating Systems like Windows, Unix, Mac OS etc.
        • Software: It checks your developed software to be compatible with other software. For example,
            MS Word application should be compatible with other software like MS Outlook, MS Excel, etc.
        • Network: Evaluation of performance of a system in a network with varying parameters such as Bandwidth, Operating speed, Capacity.
            It also checks application in different networks with all parameters mentioned earlier.
        • Browser: It checks the compatibility of your website with different browsers like Firefox, Google Chrome, Internet Explorer etc.
        • Devices: It checks compatibility of your software with different devices like USB port Devices, Printers and Scanners, Other media devices and Blue tooth.
        • Mobile: Checking your software is compatible with mobile platforms like Android, iOS etc.
        • Versions of the software: It is verifying your software application to be compatible with different versions of the software.

33. Difference between waterfall and agile model.

34. How do you identify the web elements?
        Webelements are identified using locators
        1. ID: Syntax: driver.findElement(By.id(“Element ID”))
        2. Name: Syntax: driver.findElement(By.name(“Element Name”))
        3. Class Name: Syntax: driver.findElement(By.className(“Element className”))
        4. TagName : Syntax: driver.findElement(By.tagName(“Element TagName”))
        5. LinkText : Syntax: driver.findElement(By.linkText(“Link Text”))
        6. Partial LinkText : Syntax: driver.findElement(By.PartialLinkText(“PartialLink Text”))
        7. XPath : Syntax: driver.findElement(By.xpath(“Element XPath expression”))
        8. CSS : Syntax: driver.findElement(By.cssselector(“Element css expression”))""

35. Difference between @Factory and @DataProvider?
        @DataProvider –
            1. A test method that uses @DataProvider will be executed multiple number of times based on the configuration provided in it.
                The test method will be executed using the same instance of the test class to which the test method belongs.
            2. The condition that needs to be met here is that the method marked as @DataProvider must return a 2D Object array (Object[][])
                where each Object[] will be used as the input parameter to an iteration of the test method which uses the data provider.
            3. The Test method will be executed using the same instance of the test class to which the test method belongs.
            @Factory –
            1. A factory will execute all the test methods present inside a test class using separate instances of the class.
            2. Using this, we can instantiate a class multiple times rather than just a method.
            3. The factory method should return an Object[]. This can be an array of Method calls or class objects.
            4. The Test method will be executed using the separate instance of the respective class.""
        ------------------------------------------------------------------------------
        @Factory explain with real time example?
        @Factory –
            1. A factory will execute all the test methods present inside a test class using separate instances of the class.
            2. Using this, we can instantiate a class multiple times rather than just a method.
            3. The factory method should return an Object[]. This can be an array of Method calls or class objects.
            4. The Test method will be executed using the separate instance of the respective class.